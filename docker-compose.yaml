name: desbordante

services:
  postgres:
#    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    image: postgres:16.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"

  backend:
    image: ${BACKEND_IMAGE}
    volumes:
      - ./volumes/uploads:${UPLOADED_FILES_DIR_PATH}
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    restart: always
    ports:
      - "${BACKEND_PORT}:8000"
    deploy:
      mode: replicated
      replicas: 1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/ping" ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 15s

volumes:
  postgres_data:
  rabbit_data: